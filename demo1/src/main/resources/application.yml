spring:
  kafka:
    bootstrap-servers:
      - localhost:9092      # 请根据你的实际地址修改
      #- broker2:9092
      #- broker3:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      # 发送时等待所有 ISR 确认后才返回成功
      acks: all
      retries: 3
      properties:
        # 配置开启幂等
        enable.idempotence: true
        # 允许最大请求 “in-flight” 数量为 1（幂等需要）
        max.in.flight.requests.per.connection: 1
        # 设置事务超时时间（如果不使用事务可忽略）
        transaction.timeout.ms: 60000

    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      # 自动将 JSON 反序列化到 Order 类型
      properties:
        spring.json.trusted.packages: com.example.kafka.model
      group-id: order-consumer-group
      auto-offset-reset: earliest
      enable-auto-commit: false  # 推荐手动提交，确保顺序与处理安全
      max-poll-records: 50
      # 如果准备使用事务性消费，则需要 isolation.level=read_committed
      # isolation.level: read_committed

# 日志级别，可按需调整
logging:
  level:
    root: INFO
    org.springframework.kafka: INFO
    com.example.kafka: DEBUG

# 如果需要自定义日志配置，可以在 resources/logback-spring.xml 中定义
