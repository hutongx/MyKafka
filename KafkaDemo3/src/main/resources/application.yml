spring:
  application:
    name: KafkaDemo3
  # Spring Boot Kafka????
  kafka:
    # Kafka????
    bootstrap-servers: localhost:9092

    # Producer??
    producer:
      # ????
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

      # ?????
      acks: all  # ????????
      retries: 2147483647  # ????
      enable-idempotence: true  # ?????

      # ????
      batch-size: 16384  # 16KB????
      linger-ms: 10  # ??10ms??????
      buffer-memory: 33554432  # 32MB?????
      compression-type: snappy  # ????

      # ????
      request-timeout-ms: 30000  # 30?????
      delivery-timeout-ms: 120000  # 2??????

      # ????
      max-in-flight-requests-per-connection: 1  # ??????

      # ?????
      properties:
        retry.backoff.ms: 1000
        reconnect.backoff.ms: 1000

    # Consumer??
    consumer:
      # ????
      group-id: default-consumer-group

      # ????
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

      # ????
      auto-offset-reset: earliest  # ????offset????
      enable-auto-commit: false  # ??????

      # ????
      fetch-min-size: 1024  # ????1KB
      fetch-max-wait: 500  # ????500ms
      max-poll-records: 500  # ??????500???

      # ????
      heartbeat-interval: 3000  # 3?????
      session-timeout: 30000  # 30?????

      # ?????
      properties:
        # ???????????
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.apache.kafka.common.serialization.StringDeserializer

        # ?????
        max.poll.interval.ms: 300000  # 5????????
        retry.backoff.ms: 1000
        reconnect.backoff.ms: 1000
        receive.buffer.bytes: 65536  # 64KB?????
        send.buffer.bytes: 131072  # 128KB?????

    # Listener??
    listener:
      # ????
      ack-mode: manual_immediate

      # ????
      concurrency: 3

      # ????
      poll-timeout: 3000

      # ????
      type: batch  # ?????

    # ????
    admin:
      properties:
        bootstrap.servers: ${spring.kafka.bootstrap-servers}

# ??????
app:
  kafka:
    topics:
      user-events: user-events
      order-events: order-events
      notification-events: notification-events

    # ????
    retry:
      max-attempts: 3
      backoff-delay: 1000
      multiplier: 2.0

    # ??????
    dlq:
      enabled: true
      suffix: .DLQ

    # ????
    monitoring:
      enabled: true
      metrics-interval: 30s

# ????
logging:
  level:
    org.apache.kafka: INFO
    org.springframework.kafka: INFO
    com.example.kafka: DEBUG

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"

# ????
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus

  endpoint:
    health:
      show-details: always

  metrics:
    export:
      prometheus:
        enabled: true